"""Add foreign keys and relationships

Revision ID: b867cc1f262e
Revises: 
Create Date: 2025-01-29 16:24:25.461443

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b867cc1f262e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actions',
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('dividends', sa.Float(), nullable=True),
    sa.Column('stock_splits', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('ticker', 'date')
    )
    op.create_table('balance_sheet',
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('column_name', sa.String(), nullable=False),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('ticker', 'date', 'column_name')
    )
    op.create_table('cash_flow',
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('column_name', sa.String(), nullable=False),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('ticker', 'date', 'column_name')
    )
    op.create_table('earnings_dates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('earnings_date', sa.Date(), nullable=False),
    sa.Column('eps_estimate', sa.Float(), nullable=True),
    sa.Column('reported_eps', sa.Float(), nullable=True),
    sa.Column('surprise_percentage', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('financials',
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('column_name', sa.String(), nullable=False),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('ticker', 'date', 'column_name')
    )
    op.create_table('major_holders',
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('holder_name', sa.String(), nullable=False),
    sa.Column('shares_held', sa.BigInteger(), nullable=True),
    sa.Column('percentage_held', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('ticker', 'holder_name')
    )
    op.create_table('mutualfund_holders',
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('holder_name', sa.String(), nullable=False),
    sa.Column('shares_held', sa.BigInteger(), nullable=True),
    sa.Column('percentage_held', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('ticker', 'holder_name')
    )
    op.create_table('recommendations',
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('firm', sa.String(), nullable=True),
    sa.Column('to_grade', sa.String(), nullable=True),
    sa.Column('from_grade', sa.String(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ticker', 'date')
    )
    op.create_table('technical_analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('signal', sa.String(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('close', sa.Float(), nullable=True),
    sa.Column('sma_22', sa.Float(), nullable=False),
    sa.Column('sma_55', sa.Float(), nullable=False),
    sa.Column('rsi_1m', sa.Float(), nullable=False),
    sa.Column('rsi_3m', sa.Float(), nullable=False),
    sa.Column('rsi_6m', sa.Float(), nullable=False),
    sa.Column('bollinger_high', sa.Float(), nullable=False),
    sa.Column('bollinger_low', sa.Float(), nullable=False),
    sa.Column('bollinger_mid', sa.Float(), nullable=True),
    sa.Column('bollinger_perc_b', sa.Float(), nullable=True),
    sa.Column('bollinger_width', sa.Float(), nullable=True),
    sa.Column('overbaughtoversold', sa.Float(), nullable=False),
    sa.Column('zscore', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticker', 'date', name='uq_ticker_date')
    )
    op.drop_table('Summary')
    op.drop_table('strsvp_Sheet1')
    op.alter_column('adj_runs', 'share_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('adj_runs', 'industry',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('adj_runs', 'run_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.drop_constraint('ukey_for_data', 'adj_runs', type_='unique')
    op.create_foreign_key(None, 'adj_runs', 'stocks', ['code'], ['code'])
    op.drop_constraint('ukey_close_rundate', 'close_runs', type_='unique')
    op.create_foreign_key(None, 'close_runs', 'stocks', ['code'], ['code'])
    op.drop_constraint('unique_date_ticker', 'dividends', type_='unique')
    op.create_foreign_key(None, 'dividends', 'stocks', ['ticker'], ['code'])
    op.drop_constraint('date_code_ukey', 'predictions', type_='unique')
    op.create_unique_constraint('_date_code_uc', 'predictions', ['date', 'code'])
    
    op.alter_column('stocks', 'industry_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('stocks', 'sub_industry_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('stocks_sub_industry_id_fkey', 'stocks', type_='foreignkey')
    op.drop_constraint('stocks_industry_id_fkey', 'stocks', type_='foreignkey')
    op.create_foreign_key(None, 'stocks', 'industries', ['industry_id'], ['id'])
    op.create_foreign_key(None, 'stocks', 'sub_industries', ['sub_industry_id'], ['id'])
    
    op.create_foreign_key(None, 'ticker_name', 'stocks', ['ticker'], ['code'])
    op.drop_constraint('ukey_code_ukey', 'vi_data', type_='unique')
    op.drop_constraint('zar_bad_ukey_dates', 'zar_bad', type_='unique')
    op.drop_constraint('zar_good_start_date_key', 'zar_good', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('zar_good_start_date_key', 'zar_good', ['start_date'])
    op.create_unique_constraint('zar_bad_ukey_dates', 'zar_bad', ['start_date'])
    op.create_unique_constraint('ukey_code_ukey', 'vi_data', ['code', 'run_date'])
    op.drop_constraint(None, 'ticker_name', type_='foreignkey')
    op.alter_column('ticker_name', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('ticker_name', 'ticker',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_constraint(None, 'stocks', type_='foreignkey')
    op.drop_constraint(None, 'stocks', type_='foreignkey')
    op.create_foreign_key('stocks_industry_id_fkey', 'stocks', 'industries', ['industry_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('stocks_sub_industry_id_fkey', 'stocks', 'sub_industries', ['sub_industry_id'], ['id'], ondelete='CASCADE')
    op.alter_column('stocks', 'sub_industry_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('stocks', 'industry_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    #op.drop_constraint('uq_ticker_date', 'stock_data_history', type_='unique')
    #op.create_unique_constraint('unique_ticker_date', 'stock_data_history', ['ticker', 'date'])
    op.drop_constraint('_date_code_uc', 'predictions', type_='unique')
    op.create_unique_constraint('date_code_ukey', 'predictions', ['date', 'code'])
    op.drop_constraint(None, 'dividends', type_='foreignkey')
    op.create_unique_constraint('unique_date_ticker', 'dividends', ['date', 'ticker'])
    op.drop_constraint(None, 'close_runs', type_='foreignkey')
    op.create_unique_constraint('ukey_close_rundate', 'close_runs', ['code', 'run_date'])
    op.drop_constraint(None, 'adj_runs', type_='foreignkey')
    op.create_unique_constraint('ukey_for_data', 'adj_runs', ['code', 'run_date'])
    op.alter_column('adj_runs', 'run_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('adj_runs', 'industry',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('adj_runs', 'share_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_table('strsvp_Sheet1',
    sa.Column('Column1', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Column2', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Summary',
    sa.Column('Name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('EPS', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('NAV', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Sales', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('EPS_Growth_F', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ROE_F', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Net_Profit_Margin_F', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Sales_Growth_F', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Holding', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Shares', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Interest_Cover', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('TNAV', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ROTE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Actual_ROE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Last_update', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('O_Margin', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Dividend', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Cash_ps', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ACT_HEPS', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Quality_Rating', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Div_Decl', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DIV_LDT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DIV_Pay', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('REC', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('REC_on', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('YE_release', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Int_release', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Rec_Price', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Share_Price', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PEG', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PEG_PE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PEG_PE_value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PEG_NAV', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.drop_table('technical_analysis')
    op.drop_table('recommendations')
    op.drop_table('mutualfund_holders')
    op.drop_table('major_holders')
    op.drop_table('financials')
    op.drop_table('earnings_dates')
    op.drop_table('cash_flow')
    op.drop_table('balance_sheet')
    op.drop_table('actions')
    # ### end Alembic commands ###
